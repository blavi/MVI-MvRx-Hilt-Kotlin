plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        Properties properties = new Properties()
        if (rootProject.file("local.properties").exists()) {
            properties.load(rootProject.file("local.properties").newDataInputStream())
        }

//        manifestPlaceholders = [ tmdbApiKey : properties.getProperty("TMDB_API_KEY", "") ]
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            buildConfigField "String", 'BASE_URL', '"https://api.themoviedb.org/3/"'
            buildConfigField "String", 'IMAGE_BASE_URL', '"https://image.tmdb.org/t/p/w500/"'
            buildConfigField "String", 'TMDB_API_KEY', '"b6b50cb2810bfec1c362347bc79a4de8"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(":domain")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    // Moshi
    implementation "com.squareup.moshi:moshi:1.11.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.11.0"
    implementation("com.squareup.moshi:moshi-adapters:1.9.2")

    // Hilt
    def hiltVersion = "2.28-alpha"
    implementation "com.google.dagger:hilt-android:${hiltVersion}"
    kapt "com.google.dagger:hilt-android-compiler:${hiltVersion}"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'


    // Room
    implementation 'androidx.room:room-ktx:2.2.6'
    kapt "androidx.room:room-compiler:2.2.6"
    implementation "androidx.room:room-runtime:2.2.6"
    implementation "androidx.room:room-rxjava2:2.2.6"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.20"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    // MockK
    def mockk_version = "1.10.0"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // Hamcrest
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
kapt {
    correctErrorTypes true
}